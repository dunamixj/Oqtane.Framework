@namespace Oqtane.Modules.Admin.Pages
@inherits ModuleBase
@inject NavigationManager NavigationManager
@inject IPageService PageService
@inject IStringLocalizer<Index> Localizer
@inject IStringLocalizer<Search> SearchLocalizer
@inject IStringLocalizer<SharedResources> SharedLocalizer

@if (PageState.Pages != null && UserSecurity.IsAuthorized(PageState.User, RoleNames.Admin))
{
    <ActionLink Action="Add" Text="Add Page" ResourceKey="AddPage" />
    <Search DataSource="allResults"
            IsSearchEnabled="true"
            MinCharacters="0"
            InputValidationRegex="@SearchLocalizer["SearchValidationRegex"].Value"
            Placeholder="@SearchLocalizer["SearchPlaceholder"].Value"
            InputAriaLabel="@SearchLocalizer["SearchInputAriaLabel"].Value"
            ButtonAriaLabel="@SearchLocalizer["SearchButtonAriaLabel"].Value"
            ButtonToolTip="@SearchLocalizer["SearchButtonToolTip"].Value"
            ButtonPosition="right"
            IconPosition="left"
            ShowSearchButton="true"
            EnterKeyEnabled="true"
            ResultsAsTyped="false"
            DebounceEnabled="false"
            CaseSensitive="false"
            @bind-searchTerm="searchTerm"
            ItemTypes='new List<string> { "Name" }'
            InputTabIndex = "0"
            ButtonTabIndex = "1"
            OnSearchResultsChanged="HandleSearchResults" />
    <Pager Items="@pageList">
        <Header>
        <th style="width: 1px;">&nbsp;</th>
        <th style="width: 1px;">&nbsp;</th>
        <th style="width: 1px;">&nbsp;</th>
        <th>@SharedLocalizer["Name"]</th>
        </Header>
        <Row>
            <td><ActionLink Action="Edit" Parameters="@($"id=" + context.PageId.ToString())" ResourceKey="EditPage" /></td>
            <td><ActionDialog Header="Delete Page" Message="@string.Format(Localizer["Confirm.Page.Delete"], context.Name)" Action="Delete" Security="SecurityAccessLevel.Admin" Class="btn btn-danger" OnClick="@(async () => await DeletePage(context))" ResourceKey="DeletePage" /></td>
            <td><button type="button" class="btn btn-secondary" @onclick="@(async () => NavigationManager.NavigateTo(Browse(context)))">@Localizer["Browse"]</button></td>
            <td>@(new string('-', context.Level * 2))@(context.Name)</td>
        </Row>
    </Pager>
}

@code {
    public override SecurityAccessLevel SecurityAccessLevel => SecurityAccessLevel.Admin;

    private string searchTerm = "";
    private IEnumerable<Page> allResults;
    private IEnumerable<Page> pageList;

    private async Task DeletePage(Page page)
    {
        try
        {
            page.IsDeleted = true;

            await PageService.UpdatePageAsync(page);
            await logger.LogInformation("Page Deleted {Page}", page);
            NavigationManager.NavigateTo(NavigateUrl("admin/pages"));
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Deleting Page {Page} {Error}", page, ex.Message);
            AddModuleMessage(Localizer["Error.Page.Delete"], MessageType.Error);
        }
    }

    protected string Browse(Page page)
    {
        return string.IsNullOrEmpty(page.Url) ? NavigateUrl(page.Path) : page.Url;
    }

    protected override void OnInitialized()
    {
        allResults = PageState.Pages.Where(page => !page.IsDeleted).ToList();
        pageList = allResults;
    }

    private void HandleSearchResults(IEnumerable<object> filteredDataList)
    {
        pageList = filteredDataList.Cast<Page>().ToList();
    }
}
