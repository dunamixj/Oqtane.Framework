@namespace Oqtane.Modules.Controls
@inherits LocalizableComponent
@inject ISettingService SettingService

@foreach (Profile profile in profiles)
{
    var p = profile;
    if (!p.IsPrivate || UserSecurity.IsAuthorized(PageState.User, RoleNames.Admin))
    {
        if (p.Category != category)
        {
            <div class="col text-center pb-2">
                @p.Category
            </div>
            category = p.Category;
        }
        <div class="row mb-1 align-items-center">
            <Label Class="col-sm-3" For="@p.Name" HelpText="@p.Description">@p.Title</Label>
            <div class="col-sm-9">
                @if (!string.IsNullOrEmpty(p.Options))
                {
                    <select id="@p.Name" class="form-select" @onchange="@(e => ProfileChanged(e, p.Name))">
                        @foreach (var option in p.Options.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            @if (GetProfileValue(p.Name, "") == option || (GetProfileValue(p.Name, "") == "" && p.DefaultValue == option))
                            {
                                <option value="@option" selected>@option</option>
                            }
                            else
                            {
                                <option value="@option">@option</option>
                            }
                        }
                    </select>
                }
                else
                {
                    @if (p.IsRequired)
                    {
                        <input id="@p.Name" class="form-control" maxlength="@p.MaxLength" value="@GetProfileValue(p.Name, p.DefaultValue)" required @onchange="@(e => ProfileChanged(e, p.Name))" />
                    }
                    else
                    {
                        <input id="@p.Name" class="form-control" maxlength="@p.MaxLength" value="@GetProfileValue(p.Name, p.DefaultValue)" @onchange="@(e => ProfileChanged(e, p.Name))" />
                    }
                }
            </div>
        </div>
    }
}

@code {
    private List<Profile> profiles;
    private Dictionary<string, string> settings;
    private string category = string.Empty;

    [Parameter]
    public List<Profile> Profiles { get; set; }

    [Parameter]
    public Dictionary<string, string> Settings { get; set; }

    protected override void OnInitialized()
    {
        profiles = Profiles;
        settings = Settings;
    }

    private string GetProfileValue(string SettingName, string DefaultValue)
    => SettingService.GetSetting(settings, SettingName, DefaultValue);

    private void ProfileChanged(ChangeEventArgs e, string SettingName)
    {
        var value = (string)e.Value;
        settings = SettingService.SetSetting(settings, SettingName, value);
    }
}